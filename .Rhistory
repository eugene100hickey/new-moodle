viridis::turbo(5) |> scales::show_col()
viridis::turbo(10) |> scales::show_col()
viridis::turbo(20) |> scales::show_col()
viridis::turbo(20)
source("C:/Users/eugene/OneDrive - Technological University Dublin/MDriveRestore/ScienceWeb/new-moodle/planck.R", echo=TRUE)
tibble(lambda = lambda*1e9, u1, u2, u3) |>
pivot_longer(-lambda, names_to = "temperature", values_to = "planck") |>
ggplot(aes(lambda, planck, colour = temperature)) +
geom_line(show.legend = F) +
labs(x = TeX("$\\lambda (nm)$"),
y = "",
title = my_title) +
scale_colour_manual(values = c(col1, col2, col3)) +
geom_vline(xintercept = c(lambda_max1, lambda_max2, lambda_max3),
linetype="dotted", size = 1, col = c(col1, col2, col3)) +
theme_publish(base_size = 32, base_family = "Ink Free", base_linewidth = 0.7) +
theme(axis.title.x = element_text(family = "Arial"),
axis.text.y = element_blank(),
plot.title = element_markdown())
:::: columns
c
c0
kb
2.9e-3/kelvin1
library(tidyverse)
library(matlab)
library(words)
z <- words |> dplyr::filter(word_length == 5) |> pull(word)
z |> str_subset("..sit")
library(tidyverse)
library(matlab)
begin <- 10037
end <- 20000
my_step <- 100
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 13009
end <- 14000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 10009
end <- 20000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1 & between(numbers %% 1000, 300, 400)]
install.packages("ellmer")
library(tidyverse)
library(matlab)
begin <- 55557
end <- 90000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 55567
end <- 60000
my_step <- 100
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
library(words)
z <- words |> dplyr::filter(word_length == 5) |> pull(word)
z |> str_subset("e.ter")
z |> str_subset("et.er")
z |> str_subset(".d.rs")
z |> str_subset("te..o")
z |> str_subset(".load")
library(codata)
library(constants)
me <- codata$value[codata$symbol == "me"]
h <- codata$value[codata$symbol == "h"]
c0 <- codata$value[codata$symbol == "c0"]
h/c/me * (1 - cos(80/180*pi))
h/c0/me * (1 - cos(80/180*pi))
cos(80/180*pi))
cos(80/180*pi)
source("C:/Users/eugene/OneDrive - Technological University Dublin/MDriveRestore/ScienceWeb/new-moodle/wave-packets.R", echo=TRUE)
n <- 200
w <- 1/seq(central-n*step/2, central+n*step/2, by = step)
z <- -3000:3000
a <- map(1:n, function(index) sin(z*w[index])) |>
data.frame() |>
rowwise() |>
mutate(total = sum(c_across(everything())))
tibble(z, amp = a$total) |> ggplot(aes(z, amp)) +
geom_line() +
labs(x = "Distance (m)",
y = "Amplitude") +
theme_publish(base_size = 28, base_family = "Ink Free", base_linewidth = 0.7) +
theme(axis.line.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
step <- 0.01
n <- 500
w <- 1/seq(central-n*step/2, central+n*step/2, by = step)
z <- -5000:5000
a <- map(1:n, function(index) sin(z*w[index])) |>
data.frame() |>
rowwise() |>
mutate(total = sum(c_across(everything())))
tibble(z, amp = a$total) |> ggplot(aes(z, amp)) +
geom_line() +
labs(x = "Distance (m)",
y = "Amplitude") +
theme_publish(base_size = 28, base_family = "Ink Free", base_linewidth = 0.7) +
theme(axis.line.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
library(tidyverse)
library(matlab)
begin <- 20047
end <- 30000
my_step <- 100
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 20947
end <- 30000
my_step <- 1000
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
library(words)
z <- words |> dplyr::filter(word_length == 5) |> pull(word)
z |> str_subset(".ondo")
z |> str_subset("scra.")
z |> str_subset(".lots")
library(words)
z <- words |> dplyr::filter(word_length == 5) |> pull(word)
z |> str_subset(".rade")
font_add(family = "Ink Free", regular = "assets/Inkfree.ttf")
showtext_auto()
# single waveform is df
df <- tibble(z=1:3000, a=sin(z/100))
# wavepacket is a
central <- 20
step <- 0.01
n <- 500
w <- 1/seq(central-n*step/2, central+n*step/2, by = step)
z <- -5000:5000
a <- map(1:n, function(index) sin(z*w[index])) |>
data.frame() |>
rowwise() |>
mutate(total = sum(c_across(everything())))
two_waves <- tibble(z=1:3000, a=sin(z/100)+sin(z/95))
two_waves |> ggplot(aes(z, a)) +
geom_line() +
labs(x = "Distance (m)",
y = "Amplitude") +
theme_publish(base_size = 28, base_family = "Ink Free", base_linewidth = 0.7) +
theme(axis.line.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
two_waves <- tibble(z=1:30000, a=sin(z/100)+sin(z/95))
two_waves |> ggplot(aes(z, a)) +
geom_line() +
labs(x = "Distance (m)",
y = "Amplitude") +
theme_publish(base_size = 28, base_family = "Ink Free", base_linewidth = 0.7) +
theme(axis.line.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
9.1/6.2
1.19e-7*4*24*3600
207.9316746 - 1.00728 *82 - 1.008665 *126
-1.757075*1.6606e-27*(3e9)^2
-1.757075*1.6606e-27*(3e8)^2
2.626e-10 / 1.6e-19 / 1e6
.Last.value/208
8.95^0.333 /sqrt(2)
15.07 / 9.77
library(constants)
h <- codata$value[codata$symbol== "h"]
h/mc0
h/m/c0
h/me/c0
cos(655/180*pi)
h/me/c0 *(1-cos(55*pi/180))
0.045e-9 + 1.034636e-12
lam <- c(22.72, 32.56, 39.90,  46.41)
0.154051/2/sin(lam/2*pi/180)
d -.Last.value
d =.Last.value
d^2/0.3905^2
1/.Last.value
9.299e-26 - 1.00728 *27*1.66e-27 - 1.008665 *29*1.66e-27
View(codata)
9.299e-26 - 1.00728 *27*1.660539e-27 - 1.008665 *29*1.660539e-27
6.693e-11 / 1.6e-19
6.693e-11 / 1.6e-19/1e6
.Last.value/56
0.154051/2/sin(28.23/2*pi/180)
0.154051/2/sin(28.23/2*pi/180)*sqrt(2)
1/120e-9*h*c0
1/120e-9*h*c0/1.6e-19
1/120e-9*h*c0/1.6e-19 - 4.62
library(tidyverse)
library(matlab)
begin <- 50043
end <- 90000
my_step <- 100
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
z |> str_subset("star.")
z <- words |> dplyr::filter(word_length == 5) |> pull(word)
z |> str_subset("star.")
z |> str_subset(".laid")
z |> str_subset("di.t.")
hbar=h/2/pi
cons <- pi^2*hbar^2/2/me
cons
cons <- pi^2*hbar^2/2/me/1e-9^2
cons
cons/1.6e-19
View(codata)
cons/1.6022e-19
mp=codata$value[codata$symbol == "mp"]
cons <- pi^2*hbar^2/2/mp/1e-15^2
cons/1.6022e-19
cons/1.6022e-19/1e6
library(tidyverse)
library(matlab)
begin <- 50013
end <- 90000
my_step <- 100
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 51003
end <- 52000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
library(words)
z <- words |> dplyr::filter(word_length == 5) |> pull(word)
z |> str_subset(".eret")
z |> str_subset("boso.")
z |> str_subset("sing.")
z |> str_subset("de.u.")
library(mapgl)
library(s2)
library(colourvalues)
library(yyjsonr)
dat = data.frame(
token = as.character(
s2_cell_parent(
as_s2_cell(
s2_lnglat(-75.7019612, 45.4186427)
)
, level = 1:30
)
)
, value = seq(10, 1000, length.out = 30)
)
dat$fillColor = colour_values(dat$value, alpha = 30, palette = "inferno")
map = maplibre(style = 'https://basemaps.cartocdn.com/gl/positron-gl-style/style.json') |>
add_navigation_control(visualize_pitch = TRUE) |>
add_layers_control(collapsible = TRUE, layers = c("test"))
map$dependencies = c(
map$dependencies
, list(
htmltools::htmlDependency(
"deck.gl"
, "9.1.4"
, src = c(
href = "https://cdn.jsdelivr.net/npm/deck.gl@9.1.4"
)
, script = "dist.min.js"
)
)
, list(
htmltools::htmlDependency(
"deck.gl"
, "9.1.4"
, src = c(
href = "https://cdn.jsdelivr.net/npm/@deck.gl/mapbox@9.1.4/dist/"
)
, script = "mapbox-overlay.min.js"
)
)
)
htmlwidgets::onRender(
map
, htmlwidgets::JS(
"function(el, x, data) {
debugger;
map = this.getMap();
let globecontrol = new maplibregl.GlobeControl();
map.addControl(globecontrol);
function hexToRGBA(hex) {
// remove invalid characters
hex = hex.replace(/[^0-9a-fA-F]/g, '');
if (hex.length < 5) {
hex = hex.split('').map(s => s + s).join('');
}
// parse pairs of two
let rgba = hex.match(/.{1,2}/g).map(s => parseInt(s, 16));
return rgba;
}
let s2Plot = new deck.S2Layer({
id: 'test',
data: JSON.parse(data.x),
extruded: true,
filled: true,
lineWidthMaxPixels: 1,
getS2Token: d => d.token,
getFillColor: d => hexToRGBA(d.fillColor),
getElevation: d => d.value,
elevationScale: 1,
wireframe: true,
});
var decklayer = new deck.MapboxOverlay({
interleaved: true,
layers: [s2Plot],
});
map.addControl(decklayer);
map.setMaxZoom(300);
}"
)
, data = list(
x = yyjsonr::write_json_str(dat)
)
)
View(df)
z |> str_subset(".li.e")
begin <- 20003
end <- 30000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 82003
end <- 83000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 82073
end <- 83000
my_step <- 100
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
z |> str_subset(".erie")
z |> str_subset(".ordy")
z |> str_subset(".ar.e")
z |> str_subset(".etal")
h
h/581e-9
h/581e-9*c0
h/581e-9*c0/e
h/581e-9*c0/1.602e-19
h/180e-9*c0/1.602e-19
.Last.value-5.3
h/m/c0(1-cos(75/180*pi))
h/me/c0(1-cos(75/180*pi))
h/me/c0*(1-cos(75/180*pi))
h/me/c0*(1-cos(75/180*pi)) - 0.154051e-9
library(tidyverse)
library(matlab)
begin <- 20003
end <- 30000
my_step <- 100
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
library(words)
z <- words |> dplyr::filter(word_length == 5) |> pull(word)
z |> str_subset(".arge")
z |> str_subset(".sal.")
h/sqrt(2*me*27.5e3*1.602e-19)
56.825/74.3
0.05/.2
hbar
hbar/me
hbar/me/0.115e-9
hbar/me/0.115e-9/2
2.35/0/039
2.35/0.039
library(tidyverse)
library(matlab)
begin <- 42001
end <- 43000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 24051
end <- 25000
my_step <- 100
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
6.024e-38
(6.626e-34)^2*pi^2/2/9.11e-31
(6.626e-34)^2*pi^2/2/9.11e-31/4/pi^2
(6.626e-34)^2*pi^2/2/9.11e-31/4/pi^2*11/(1.307e-9)^2
(6.626e-34)^2*pi^2/2/9.11e-31/4/pi^2*11/(1.307e-9)^2*6.626e-34*3e8
(6.626e-34)^2*pi^2/2/9.11e-31/4/pi^2*11/(1.307e-9)^2
(6.626e-34)^2*pi^2/2/9.11e-31/4/pi^2*11/(1.307e-9)^2/6.626e-34/3e8
1/.Last.value *1e9
8*9.11e-31*(1.307e-9)^2*3e8/6.626e-34/11
8*9.11e-31*(1e-9)^2*3e8/6.626e-34/1
z=8*9.11e-31*(1e-9)^2*3e8/6.626e-34/1
z*1.307^2/11
z
0.4287*3^(1/3)
0.4287*3^(1/3)/4
2/60/360
(2/60/360)^-2
(2/60/360)^-2/1e9
library(tidyverse)
library(matlab)
begin <- 50001
end <- 90000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 80001
end <- 90000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
2.2*1160*45
2.2*1160*45 / 45/4190
2.2*1160*45 / 35/4190
10/log(25/15)
2.2*1160*45
2.2*1160*45 / 19.576
library(words)
z <- words |> dplyr::filter(word_length == 5) |> pull(word)
z |> str_subset("o..re")
library(tidyverse)
library(matlab)
begin <- 10023
end <- 11000
my_step <- 100
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
library(xdvir)
install.packages("xdvir")
library(xdvir)
url_spect <- glue::glue("http://dr12.sdss.org/optical/spectrum/view/data/format=csv/spec=lite?plateid={plate}&mjd={mjd}&fiberid={fiber}")
"http://dr12.sdss.org/optical/spectrum/view/data/format=csv/spec=lite?"
<br>
>$i \hbar \frac{\partial T}{\partial t} = E \times T(t)$
$T(t) = A e^{-iEt/\hbar}$
$- \frac{\hbar^2}{2m} \frac{\partial ^2 \psi}{\partial x^2} + V(x) \psi = E \psi$
$\psi_n = \sqrt{2/L} \sin(n\pi x /L)$
$E_n = \frac{\hbar^2 \pi^2 n^2}{2mL^2}$
$\implies \Delta E = \frac{\hbar^2 \pi^2}{2mL^2} (N + 1)$
$\implies \mu = \frac{2eL}{\pi^2}[\frac{n_{initial}\times n_{final}}{n_{initial}^2 - n_{final}^2}]$
sin(2*pi)
sin(3*pi)
sin(3.5*pi)
library(tidyverse)
library(matlab)
begin <- 43007
end <- 44000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 34807
end <- 34900
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
library(words)
z <- words |> dplyr::filter(word_length == 5) |> pull(word)
z |> str_subset("e.sle")
z |> str_subset("e..le")
z |> str_subset(".oral")
z |> str_subset(".cut.")
z |> str_subset("stee.")
z |> str_subset(".road")
z |> str_subset("slo.e")
z |> str_subset("s.ole")
907.5/9.64
library(tidyverse)
u <- c(25, 27, 30, 35, 42, 50, 70, 100)
z <- tibble(u = u, v= v, u0 = rep(0, 8))
v <- c(108, 76, 61, 47, 38.5, 32, 28, 24)
z <- tibble(u = u, v= v, u0 = rep(0, 8))
geom_segment?
?geom_segment
z |>
ggplot() +
geom_segment(aes(x = u0, xend = v, y = u, yend = 0))
library(tidyverse)
library(ggthemes)
library(ggthemr)
library(showtext)
library(gender)
library(ggpointdensity)
library(hms)
library(ggmap)
theme_set(theme_stata())
ggthemr("fresh")
my_font <- "Kalam"
font_add_google(my_font)
showtext_auto()
theme_update(text = element_text(size = 36, family = my_font))
z |>
ggplot() +
geom_segment(aes(x = u0, xend = v, y = u, yend = 0))
z |>
ggplot() +
geom_segment(aes(x = u0, xend = v, y = u, yend = 0)) +
labs(x = "v(cm)",
y = "u(cm)")
z |>
ggplot() +
geom_segment(aes(x = u0, xend = v, y = u, yend = 0)) +
labs(x = "v(cm)",
y = "u(cm)") +
annotate("point", x = 20, y = 20)
z |>
ggplot() +
geom_segment(aes(x = u0, xend = v, y = u, yend = 0)) +
labs(x = "v(cm)",
y = "u(cm)") +
annotate("point", x = 20, y = 20, colour = "red", size = 2)
